AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application that calls the Lambda API.
Parameters:
  EnvironmentName:
    Type: String
    Default: dev
Resources:
#  GetExampleDataFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
#      Handler: com.kenzie.capstone.service.lambda.GetExampleData
#      Runtime: java11
#      Description: Get Example Data for given id
#      MemorySize: 512
#      Timeout: 240
#      # Function's execution role
#      Policies:
#        - AWSLambdaBasicExecutionRole
#        - AWSLambda_ReadOnlyAccess
#        - AWSXrayWriteOnlyAccess
#        - AWSLambdaVPCAccessExecutionRole
#        - AmazonS3FullAccess
#        - AmazonDynamoDBFullAccess
#      Tracing: Active
#      Events:
#        UpdateResource:
#          Type: Api
#          Properties:
#            Path: /example/{id}
#            Method: get
#  SetExampleDataFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
#      Handler: com.kenzie.capstone.service.lambda.SetExampleData
#      Runtime: java11
#      Description: Set Example Data
#      MemorySize: 512
#      Timeout: 240
#      # Function's execution role
#      Policies:
#        - AWSLambdaBasicExecutionRole
#        - AWSLambda_ReadOnlyAccess
#        - AWSXrayWriteOnlyAccess
#        - AWSLambdaVPCAccessExecutionRole
#        - AmazonS3FullAccess
#        - AmazonDynamoDBFullAccess
#      Tracing: Active
#      Events:
#        UpdateResource:
#          Type: Api
#          Properties:
#            Path: /example/
#            Method: post

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.GetUserData
      Runtime: java11
      Description: Fetch user details
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /User/register/userId/{userId}
            Method: get
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.SetUserData
      Runtime: java11
      Description: Create a new user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /User/register
            Method: post
  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.UpdateUserData
      Runtime: java11
      Description: Update a new user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /User/register/userId/{userId}
            Method: put

    DeleteUserFunction:
      Type: AWS::Serverless::Function
      Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.DeleteUserData
      Runtime: java11
      Description: Delete an existing user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
          DeleteUser:
            Type: Api
            Properties:
              Path: /User/register/userId/{userId}
              Method: delete

    LoginUserFunction:
      Type: AWS::Serverless::Function
      Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.GetUserData
      Runtime: java11
      Description: Login existing User
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
          LoginUser:
            Type: Api
            Properties:
              Path: /User/login
              Method: post

    LogOutUserFunction:
      Type: AWS::Serverless::Function
      Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.GetUserData
      Runtime: java11
      Description: Login existing User
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        LoginUser:
          Type: Api
          Properties:
            Path: /User/logout
            Method: post

  GetPantryItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.pantry.GetPantryData
      Runtime: java11
      Description: Fetch pantry items for a user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        GetPantryItems:
          Type: Api
          Properties:
            Path: /Pantry/userId/{userId}
            Method: get
  GetPantryItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.pantry.GetPantryData
      Runtime: java11
      Description: Fetch pantry item for a user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        GetPantryItems:
          Type: Api
          Properties:
            Path: /Pantry/pantryItemId/{pantryItemId}
            Method: get
  SetPantryDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.pantry.SetPantryData
      Runtime: java11
      Description: Set pantry item for a user
      MemorySize: 512
      Timeout: 240
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /Pantry/pantryItemId/create
            Method: post
  GetRecipeDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.recipe.GetRecipeData
      Runtime: java11
      Description: Fetch recipe details
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        CreateRecipe:
          Type: Api
          Properties:
            Path: /recipe/{recipeId}
            Method: get
  SetRecipeDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler:  com.kenzie.capstone.service.lambda.recipe.SetRecipeData
      Runtime: java11
      Description: Create a new recipe
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        CreateRecipe:
          Type: Api
          Properties:
            Path: /recipe
            Method: post
  UpdateRecipeDataFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
        Handler:  com.kenzie.capstone.service.lambda.recipe.UpdateRecipeData
        Runtime: java11
        Description: Update an existing recipe
        MemorySize: 512
        Timeout: 240
        Policies:
          - AWSLambdaBasicExecutionRole
          - AWSXrayWriteOnlyAccess
          - AWSLambdaVPCAccessExecutionRole
          - AmazonS3FullAccess
          - AmazonDynamoDBFullAccess
          - AWSLambda_ReadOnlyAccess
        Tracing: Active
        Events:
          CreateRecipe:
            Type: Api
            Properties:
              Path: /recipe/{recipeId}
              Method: put
  DeleteRecipeDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler:  com.kenzie.capstone.service.lambda.recipe.DeleteRecipeData
      Runtime: java11
      Description: Delete an existing recipe
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
        - AWSLambda_ReadOnlyAccess
      Tracing: Active
      Events:
        CreateRecipe:
          Type: Api
          Properties:
            Path: /recipe/{recipeId}
            Method: delete