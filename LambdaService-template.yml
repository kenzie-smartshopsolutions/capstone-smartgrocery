AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application that calls the Lambda API.
Parameters:
  EnvironmentName:
    Type: String
    Default: dev
Resources:
  GetExampleDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.GetExampleData
      Runtime: java11
      Description: Get Example Data for given id
      MemorySize: 512
      Timeout: 240
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /example/{id}
            Method: get
  SetExampleDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.SetExampleData
      Runtime: java11
      Description: Set Example Data
      MemorySize: 512
      Timeout: 240
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        UpdateResource:
          Type: Api
          Properties:
            Path: /example/
            Method: post
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.GetUserData
      Runtime: java11
      Description: Fetch user details
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AmazonDynamoDBReadOnlyAccess
      Tracing: Active
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /userId/{userId}
            Method: get

  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
      Handler: com.kenzie.capstone.service.lambda.user.SetUserData
      Runtime: java11
      Description: Create a new user
      MemorySize: 512
      Timeout: 240
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AmazonDynamoDBFullAccess
      Tracing: Active
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /User/register
            Method: post

#  GetPantryItemsFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
#      Handler: com.kenzie.appserver.controller.PantryController::getPantryItems
#      Runtime: java11
#      Description: Fetch pantry items for a user
#      MemorySize: 512
#      Timeout: 240
#      Policies:
#        - AWSLambdaBasicExecutionRole
#        - AWSLambda_ReadOnlyAccess
#        - AmazonDynamoDBReadOnlyAccess
#      Tracing: Active
#      Events:
#        GetPantryItems:
#          Type: Api
#          Properties:
#            Path: /pantry/{userId}
#            Method: get
#
#  CreateRecipeFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: ServiceLambda/build/distributions/ServiceLambda.zip
#      Handler: com.kenzie.appserver.controller.RecipeController::createRecipe
#      Runtime: java11
#      Description: Create a new recipe
#      MemorySize: 512
#      Timeout: 240
#      Policies:
#        - AWSLambdaBasicExecutionRole
#        - AWSLambda_ReadOnlyAccess
#        - AmazonDynamoDBFullAccess
#      Tracing: Active
#      Events:
#        CreateRecipe:
#          Type: Api
#          Properties:
#            Path: /recipe
#            Method: post
